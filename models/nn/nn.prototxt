name: "nn_simple"

layer {
    name: "store_id"
    type: "Input"
    top: "store_id"
    input_param: {
        shape: {
            dim: 10000
            dim: 1
        }
    }
}

layer {
    name: "embed1"
    type: "Embed"
    top: "embed1"
    bottom: "store_id"
    embed_param {
        input_dim: 1115
        num_output: 11
        weight_filler {
            type: "xavier"
        }
        bias_filler {
            type: "constant"
        }
    }
}

layer {
    name: "data"
    type: "Input"
    top: "data"
    input_param {
        shape: {
            dim: 10000
            dim: 31
        }
    }
}

layer {
    name: "reshape1"
    type: "Reshape"
    top: "reshape1"
    bottom: "embed1"
    reshape_param {
        shape {
            dim: 10000
            dim: 11
        }
    }
}

layer {
    name: "concat1"
    type: "Concat"
    top: "concat1"
    bottom: "reshape1"
    bottom: "data"
    concat_param {
        axis: 1
    }
}

layer {
    name: "target"
    type: "Input"
    top: "target"
    include {
        phase: TRAIN
    }
    input_param {
        shape: {
            dim: 10000
            dim: 1
        }
    }
}

layer {
    name: "ip1"
    type: "InnerProduct"
    top: "ip1"
    bottom: "concat1"

    inner_product_param {
        num_output: 128
        weight_filler {
            type: "xavier"
        }
        bias_filler {
            type: "constant"
        }
    }
}

layer {
    name: "do1"
    type: "Dropout"
    top: "do1"
    bottom: "ip1"
    dropout_param {
        dropout_ratio: 0.1
    }
}

layer {
    name: "ip2"
    type: "InnerProduct"
    top: "ip2"
    bottom: "do1"

    inner_product_param {
        num_output: 128
        weight_filler {
            type: "xavier"
        }
        bias_filler {
            type: "constant"
        }
    }
}

layer {
    name: "do2"
    type: "Dropout"
    top: "do2"
    bottom: "ip2"
    dropout_param {
        dropout_ratio: 0.1
    }
}

layer {
    name: "output"
    type: "InnerProduct"
    top: "output"
    bottom: "do2"

    inner_product_param {
        num_output: 1
        weight_filler {
            type: "xavier"
        }
        bias_filler {
            type: "constant"
        }
    }
}

layer {
    name: "loss"
    type: "EuclideanLoss"
    bottom: "output"
    bottom: "target"
    top: "loss"
    include {
        phase: TRAIN
    }
}
